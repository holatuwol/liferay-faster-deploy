#!/bin/bash

fetchpr() {
	local SCRATCH_FILE="$GIT_ROOT/.redeploy/pr.txt"

	local endpoint=$(echo $1 | cut -d'/' -f 4,5)
	local repo_url=git@github.com:${endpoint}.git
	local pull_id=$(echo $1 | cut -d'/' -f 7)

	curl -H "Authorization: token $(git config github.oauth-token)" -s https://api.github.com/repos/$endpoint/pulls/$pull_id > "$SCRATCH_FILE"

	BASE_BRANCH=$(cat "$SCRATCH_FILE" | jq '.base.ref' | cut -d'"' -f 2)

	if [ "null" == "${BASE_BRANCH}" ]; then
		BASE_BRANCH=master
	fi

	local target_branch=${2}

	if [ "" == "${target_branch}" ]; then
		target_branch=$(cat "$SCRATCH_FILE" | jq '.head.ref' | tr -d '"')
	fi

	local upstream_remote=$(git for-each-ref --format='%(refname)' refs/remotes/ | grep "/upstream[^/]*/${BASE_BRANCH}$" | cut -d'/' -f 3)

	if [ "" == "$upstream_remote" ] && [ -f "$GIT_ROOT/release.properties" ]; then
		. $(dirname "${BASH_SOURCE[0]}")/../getparent
		upstream_remote=$(git for-each-ref --format='%(refname)' refs/remotes/ | grep "/upstream[^/]*/${BASE_BRANCH}$" | cut -d'/' -f 3)
	else
		echo "${upstream_remote}"
		upstream_remote=$(git for-each-ref --format='%(refname)' refs/remotes/ | grep "/origin[^/]*/${BASE_BRANCH}$" | cut -d'/' -f 3)
	fi

	if [ "" == "$upstream_remote" ]; then
		echo "Unable to identify upstream equivalent of $BASE_BRANCH"
		exit 1
	fi

	if [ "" != "$(git for-each-ref --format='%(refname)' refs/heads/${target_branch})" ]; then
		git branch -D ${target_branch}
	fi

	git fetch --no-tags ${repo_url} pull/${pull_id}/head:${target_branch}
}

setopts() {
	. $(dirname "${BASH_SOURCE[0]}")/../setopts
}

if [[ "$1" != https://github.com/* ]]; then
	echo "$1 does not look like a pull request URL"
	exit 1
fi

setopts && fetchpr $@