#!/bin/bash

deletebranches() {
	local remote_branches=$(git for-each-ref --format='%(refname)' refs/remotes/$1 | cut -d'/' -f 3-)

	if [ "git@github.com:liferay/liferay-portal.git" == "${remote}_url" ]; then
		echo "${remote}_branches" | grep -v '/master$'
	elif [ "git@github.com:liferay/liferay-portal-ee.git" == "${remote}_url" ]; then
		echo "${remote}_branches" | grep -v '/master$' | grep -v '/master-private$' | grep -v '/ee-[0-9]*\.[0-9]*\.x$' | grep -v '/[0-9]*.[0-9]*.x$' | grep -v '/[0-9]*.[0-9]*.x-private$' | grep -v '/release-[0-9]*.q[1-4]$'
		echo "${remote}_branches" | grep '/6.[012].x$'
		echo "${remote}_branches" | grep '/ee-7.0.x$'
	elif [ "git@github.com:liferay/liferay-plugins.git" == "${remote}_url" ]; then
		echo "${remote}_branches" | grep -v '/master$' | grep -v '/ee-[0-9]*\.[0-9]*\.x$'
	elif [ "git@github.com:liferay/liferay-plugins-ee.git" == "${remote}_url" ]; then
		echo "${remote}_branches" | grep -v '/ee-[0-9]*\.[0-9]*\.x$' | grep -v '/ee-[0-9]*\.[0-9]*\.[0-9]*$'
	elif [ "git@github.com:liferay/liferay-dxp.git" == "${remote}_url" ]; then
		echo "${remote}_branches" | grep -v '/[0-9][0-9][0-9][0-9].q[0-9]*$'
	elif [[ "${remote}_url" == git@github.com:liferay/* ]]; then
		echo "${remote}_branches" | grep -v '/master$' | grep -v '/master-private$' | grep -v '/[0-9]*.[0-9]*.x-private$' | grep -v '/develop$'
	fi
}

fixupstream() {
	for remote in $(git remote | grep upstream); do
		delete_branches=$(deletebranches ${remote} | cut -d'/' -f 4-)

		if [ "" != "${deletebranches}" ]; then
			for delete_branch in $delete_branches; do
				echo git branch -d -r $delete_branch
				git branch -d -r $delete_branch
			done
		fi
	done

	echo 'Make sure to check .git/config and add any new tracking remotes'

	return 0
}

pushorigin() {
	"$(dirname "${BASH_SOURCE[0]}")/pushorigin" "$1" "$2"
}

fixupstream $@