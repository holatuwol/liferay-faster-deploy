#!/bin/bash

pushorigin() {
	local branch_name=${1}
	local upstream_name=${2}
	local origin_names=${3}

	if [ "" == "${1}" ] || [ "" == "${2}" ]; then
		echo "pushorigin <branch_name> <upstream_name> [origin_name]"
		return 1
	fi

	if [ "" == "${3}" ]; then
		local upstream_url=$(git remote -v | grep "^${upstream_name}\s" | awk '{ print $2 }' | uniq)

		if [ "" == "${upstream_url}" ]; then
			echo "Unable to determine origin corresponding to ${upstream_name}/${branch_name}"
			return 1
		fi

		origin_names=$(git remote -v | grep -F $(echo ${upstream_url} | cut -d'/' -f 2) | grep -vF ${upstream_url} | awk '{ print $1 }' | uniq)

		if [ "" == "${origin_names}" ]; then
			return 0
		fi
	fi

	for origin_name in ${origin_names}; do
		echo "Updating ${branch_name} on ${origin_name}"

		# commit=$(git log --reverse --pretty='%H' ${upstream_name}/${branch_name} | head -1)
		# echo git push ${origin_name} ${commit}:refs/heads/${branch_name}
		# GIT_CURL_VERBOSE=1 git push ${origin_name} ${commit}:refs/heads/${branch_name}

		local origin_url=$(git remote -v | grep "^${origin_name}\s" | awk '{ print $2 }' | uniq)

		if [[ "${origin_url}" == git@github.com:* ]]; then
			local origin_repo=$(echo "${origin_url}" | cut -d':' -f 2 | sed 's/.git$//g')
			echo gh repo sync ${origin_repo} -b ${branch_name}
			gh repo sync ${origin_repo} -b ${branch_name}
		else
			for commit in $(git log --reverse --pretty='%H' ${origin_name}/${branch_name}..${upstream_name}/${branch_name} | awk 'NR % 10000 == 0'); do
				echo git push ${origin_name} ${commit}:refs/heads/${branch_name}
				GIT_CURL_VERBOSE=1 git push ${origin_name} ${commit}:refs/heads/${branch_name}
			done

			commit=$(git log -1 --pretty='%H' ${upstream_name}/${branch_name})
			echo git push ${origin_name} ${commit}:refs/heads/${branch_name}
			GIT_CURL_VERBOSE=1 git push ${origin_name} ${commit}:refs/heads/${branch_name}
		fi
	done
}

pushorigin $@