#!/bin/bash

. "$(dirname ${BASH_SOURCE[0]})/common"

restorebackup() {
	echo 'Backup creation not supported!'
}

startdatabase() {
	if docker inspect ${CONTAINER_NAME} 1>/dev/null 2>/dev/null; then
		echo "Using existing container ${CONTAINER_NAME}"
		docker start ${CONTAINER_NAME}
		return 0
	fi

	docker run --name ${CONTAINER_NAME} \
		-e 'POSTGRES_USER=lportal' -e 'POSTGRES_PASSWORD=lportal' \
		--detach -p 5432:5432 postgres:${POSTGRES_VERSION}
}

updateprops() {
	if [ "" == "${DB_HOST_NAME}" ]; then
		local DB_HOST_NAME="localhost"
		echo "PostgreSQL database is started with IP address ${DB_HOST_NAME}"
	fi

	echo "Updating ${LIFERAY_HOME}/portal-ext.properties with database connection information"

	if [ -f ${LIFERAY_HOME}/portal-ext.properties ]; then
		if [ "" != "$(grep -F ${DB_HOST_NAME} ${LIFERAY_HOME}/portal-ext.properties | grep -vF '#')" ]; then
			return 0
		fi

		sed -i.bak 's/^jdbc.default/#jdbc.default/g' ${LIFERAY_HOME}/portal-ext.properties
	fi

	echo "
jdbc.default.driverClassName=org.postgresql.Driver
jdbc.default.url=jdbc:postgresql://${DB_HOST_NAME}:5432/lportal
jdbc.default.username=lportal
jdbc.default.password=lportal
" >> ${LIFERAY_HOME}/portal-ext.properties
}

waitfor_database() {
	echo 'Waiting for database startup to complete...'

	echo 'Database startup complete!'
}

DB_TYPE='postgres'

if [ "" == "${POSTGRES_VERSION}" ]; then
	POSTGRES_VERSION='15.2'
fi

runcontainer $@