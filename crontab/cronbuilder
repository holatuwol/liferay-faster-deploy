#!/bin/bash

USER=$(whoami)
HOME=/home/$USER

pushd $(dirname "${BASH_SOURCE[0]}") > /dev/null
SCRIPT_FOLDER=$(pwd -P)
popd > /dev/null

if [ "" == "$PORTAL_SOURCE_ROOT" ]; then
	PORTAL_SOURCE_ROOT=$HOME/source
fi

if [ "" == "$BUILD_FOLDER_PREFIX" ]; then
	BUILD_FOLDER_PREFIX=$HOME
fi

source "${SCRIPT_FOLDER}/aliases"

find /tmp -maxdepth 1 -type d | grep -F '/npm' | xargs rm -rf
find /tmp -maxdepth 1 -type d | grep '/[0-9a-f]\{40\}' | xargs rm -rf

# Make sure we are in the home folder

cd $HOME

# If another build is running, don't overlap

if [ -f $BUILD_FOLDER_PREFIX/.build ] && [ "clean" != "$1" ]; then
	echo Script already running.
	exit 1
fi

PULL_USER=$(git config github.pull-user)

# Make sure other builds know we are running

touch $BUILD_FOLDER_PREFIX/.build

# If we're doing a clean build, remove past pull request branches
# and also make sure we have an up-to-date set of branches to use
# for our rebase.

if [ "clean" == "$1" ]; then
	cxall

	pushd "$PORTAL_SOURCE_ROOT"

	for pull_id in $(git branch | grep -o 'pr-.*' | cut -d'-' -f 2); do
		git branch -D pr-$pull_id
		rm -f /var/www/html/builds/${pull_id}-*
	done

	popd

	rm -rf $HOME/.liferay/node/cache

	PORTAL_SOURCE_ROOT=$PORTAL_SOURCE_ROOT \
		BUILD_FOLDER_PREFIX=$BUILD_FOLDER_PREFIX \
			"$SCRIPT_FOLDER/branches"

	# Create a source archive in case we want to spin up an EC2
	# instance using up to date source.

	if [ -f $HOME/.snapshot ]; then
		"$SCRIPT_FOLDER/gitsave"
	fi
elif [ "" != "$1" ] && [ "" == "${PULL_USER}" ]; then
	pushd "$PORTAL_SOURCE_ROOT"

	rm -rf $HOME/.liferay/node/cache

	PORTAL_SOURCE_ROOT=$PORTAL_SOURCE_ROOT \
		BUILD_FOLDER_PREFIX=$BUILD_FOLDER_PREFIX \
			"$SCRIPT_FOLDER/branches" $@
fi

# If this is a pull request build server, run our pull request builds

if [ "" != "$PULL_USER" ]; then
	rm -rf "$BUILD_FOLDER_PREFIX"
	mkdir "$BUILD_FOLDER_PREFIX"

	PORTAL_SOURCE_ROOT=$PORTAL_SOURCE_ROOT \
		BUILD_FOLDER_PREFIX=$BUILD_FOLDER_PREFIX/builds \
			"$SCRIPT_FOLDER/pulls"
fi

# If we're doing a clean build, we'll want to start up the builds of
# the branches so other people can use them.

if [ "clean" == "$1" ]; then
	cd ${PORTAL_SOURCE_ROOT}
	git clean -xdf
	cd -

	crall

	for folder in master-private 73x 72x 71x 70x; do
		if [ -d $BUILD_FOLDER_PREFIX/$folder ]; then
			rm -rf $folder/*
		fi
	done
fi

# Make sure other builds know we are finished

rm -rf /tmp/yarn*

rm $BUILD_FOLDER_PREFIX/.build

${SCRIPT_FOLDER}/apachels builds/branches
${SCRIPT_FOLDER}/apachels builds/fixpacks