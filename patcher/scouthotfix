#!/bin/bash

if [ "" == "${1}" ] || [ ! -f "${1}" ]; then
	echo "Please specify a patch file as a command line argument."
	exit 1
fi

if [ -d "${1}" ]; then
	docker scout sbom "fs://$(realpath ${1})"
	exit 0
fi

BACKUP_ZIP="$(basename ${1} | sed 's/^liferay-//g' | sed 's/\.zip$/-backup.zip/g')"

if [[ ${1} == *.q*.zip ]]; then
	RELEASE_TAG="$(basename ${1} | grep -o '[0-9]*\.q[0-9]\.[0-9]*')"
	HOTFIX_IMAGE_TAG="${RELEASE_TAG}-$(basename ${1} | grep -o 'hotfix-[0-9]*')"
elif [[ $1 == *-7413.zip ]]; then
	RELEASE_TAG="7.4.13-$(unzip -c "${1}" fixpack_documentation.json 2>/dev/null | tail -n +3 | jq -r '.patch.requirements')"
	HOTFIX_IMAGE_TAG="${RELEASE_TAG}-$(basename ${1} | sed 's/\-7413.zip$//g' | sed 's/liferay-//g')"
elif [[ $1 == *-7310.zip ]]; then
	RELEASE_TAG="7.3.10-$(unzip -c "${1}" fixpack_documentation.json 2>/dev/null | tail -n +3 | jq -r '.patch.requirements')"
	HOTFIX_IMAGE_TAG="${RELEASE_TAG}-$(basename ${1} | sed 's/\-7310.zip$//g' | sed 's/liferay-//g')"
elif [[ $1 == *-7210.zip ]]; then
	RELEASE_TAG="7.2.10-$(unzip -c "${1}" fixpack_documentation.json 2>/dev/null | tail -n +3 | jq -r '.patch.requirements')"
	HOTFIX_IMAGE_TAG="${RELEASE_TAG}-$(basename ${1} | sed 's/\-7210.zip$//g' | sed 's/liferay-//g')"
elif [[ $1 == *-7210.zip ]]; then
	RELEASE_TAG="7.1.10-$(unzip -c "${1}" fixpack_documentation.json 2>/dev/null | tail -n +3 | jq -r '.patch.requirements')"
	HOTFIX_IMAGE_TAG="${RELEASE_TAG}-$(basename ${1} | sed 's/\-7210.zip$//g' | sed 's/liferay-//g')"
else
	echo "No docker image for ${1}"
	exit 1
fi

echo "FROM liferay/dxp:${RELEASE_TAG}

COPY ${1} /mnt/liferay/patching/
COPY patching-tool-*.zip /mnt/liferay/patching/

ENV LIFERAY_PATCHING_DIR=/mnt/liferay/patching
ENV LIFERAY_JVM_OPTS='-Djdk.util.zip.disableZip64ExtraFieldValidation=true'

RUN rm -rf /opt/liferay/elasticsearch-sidecar /opt/liferay/osgi/state /opt/liferay/tools
RUN /usr/local/bin/patch_liferay.sh
RUN rm -rf /opt/liferay/patching-tool /opt/liferay/tomcat/webapps/ROOT/WEB-INF/patching_backup /opt/liferay/tomcat/webapps/ROOT/WEB-INF/${BACKUP_ZIP}
" | docker build -t liferay/hotfix:${HOTFIX_IMAGE_TAG} -f - .

if [ "" != "$(docker inspect liferay/hotfix:${HOTFIX_IMAGE_TAG})" ]; then
	docker scout sbom liferay/hotfix:${HOTFIX_IMAGE_TAG} | tee ${HOTFIX_IMAGE_TAG}.sbom.json
	docker rmi liferay/hotfix:${HOTFIX_IMAGE_TAG}
fi