#!/bin/bash

SCRIPT_FOLDER=$(dirname ${BASH_SOURCE[0]})

gethotfix() {
	local VERSION=

	FIX_NAME=

	if [[ ${1} == *.q* ]]; then
		VERSION=$(echo ${1} | grep -o '[0-9]*\.q[0-9]\.[0-9]*')
		FIX_NAME=liferay-dxp-${VERSION}-$(echo ${1} | grep -o 'hotfix-[0-9]*')
	elif [[ ${1} == http* ]]; then
		FIX_NAME=$(echo "${1}" | grep -o 'liferay-hotfix-[^\.]*')
		VERSION=$(echo ${FIX_NAME} | cut -d'-' -f 4 | sed 's/\([0-9]\)\([0-9]\)\([0-9][0-9]\)/\1.\2.\3/')
	elif [[ ${1} == liferay* ]]; then
		VERSION=$(echo ${1} | cut -d'-' -f 4 | sed 's/\([0-9]\)\([0-9]\)\([0-9][0-9]\)/\1.\2.\3/')
		FIX_NAME=${1}
	elif [[ ${1} == hotfix* ]]; then
		VERSION=$(echo ${1} | cut -d'-' -f 3 | sed 's/\([0-9]\)\([0-9]\)\([0-9][0-9]\)/\1.\2.\3/')
		FIX_NAME="liferay-${1}"
	else
		VERSION=$(echo $2 | cut -d'-' -f 2 | sed 's/\([0-9]\)\([0-9]\)\([0-9][0-9]\)/\1.\2.\3/')
		FIX_NAME="liferay-hotfix-${1}-$2"
	fi

	if [ -f ${FIX_NAME}.zip ]; then
		return 0
	fi

	if [ -f ${HOME}/Downloads/${FIX_NAME}.zip ]; then
		cp ${HOME}/Downloads/${FIX_NAME}.zip .
		return 0
	fi

	local FILE_URL=

	if [[ ${VERSION} == *.q* ]]; then
		FILE_URL="https://releases-cdn.liferay.com/dxp/hotfix/${VERSION}/${FIX_NAME}.zip"
	elif [ "" == "${FILES_EE_FOLDER}" ]; then
		FILE_URL=${FILES_MIRROR}/private/ee/fix-packs/${VERSION}/hotfix/${FIX_NAME}.zip
	else
		FILE_URL=${FILES_MIRROR}/${FILES_EE_FOLDER}/fix-packs/${VERSION}/hotfix/${FIX_NAME}.zip
	fi

	echo "Downloading ${FIX_NAME} to check fixpack_documentation.xml"
	echo ${FILE_URL}
	echo

	if [ "${FILES_MIRROR}" == "https://files.liferay.com" ]; then
		python ${SCRIPT_FOLDER}/scrape_liferay.py ${FILE_URL}
	else
		curl -f -O "${FILE_URL}"
	fi
}

findbuildurl() {
	gethotfix $@

	local BUILD_ID=$(unzip -p ${FIX_NAME}.zip fixpack_documentation.xml 2>/dev/null | grep -F '<build-id>' | cut -d'>' -f 2 | cut -d'<' -f 1)

	if [ "" == "${BUILD_ID}" ]; then
		BUILD_ID=$(unzip -p ${FIX_NAME}.zip fixpack_documentation.json 2>/dev/null | jq '.build.id' | cut -d'"' -f 2)
	fi

	if [ "" == "${BUILD_ID}" ]; then
		BUILD_ID=$(unzip -p ${FIX_NAME}.zip hotfix.json 2>/dev/null | jq '.build.id' | cut -d'"' -f 2)
	fi

	if [ "" == "${BUILD_ID}" ]; then
		return 1
	fi

	BUILD_URL="https://patcher.liferay.com/group/guest/patching/-/osb_patcher/builds/${BUILD_ID}"
}

findbuildurl $@